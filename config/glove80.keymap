/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>

/* Include all behaviour includes needed by system behaviors/macros */
/* Include behaviour includes needed by key binds - automatically generated */

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#include "./mouse.dtsi"

/ {
    /* Glove80 system behavior & macros */

    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo 1>,
                <&to 1>;
        };
        tap_dance_layer_1: tap_dance_layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYER_1";
            #binding-cells = <0>;
            bindings =
                <&mo 1>,
                <&tog 1>;
        };
        tap_dance_layer_2: tap_dance_layer_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYER_2";
            #binding-cells = <0>;
            bindings =
                <&mo 2>,
                <&tog 2>;
        };
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings =
            <&mo>,
            <&rgb_ug_status_macro>;
    };

    /* Custom Defined Behaviors */
    /* Automatically generated keymap */

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                       &kp F13              &kp F14              &kp F15              &kp F16              &kp F17                                                                                                                                                                 &kp F18                      &kp F19                        &kp F20                              &kp F21                              &kp F22
                        &kp F1               &kp F2               &kp F3               &kp F4               &kp F5               &kp F6                                                                                                                        &kp F7               &kp F8                       &kp F9                        &kp F10                              &kp F11                              &kp F12
                  &kp CAPSLOCK  &auto_shift LS(Q) Q  &auto_shift LS(W) W  &auto_shift LS(F) F  &auto_shift LS(P) P  &auto_shift LS(B) B                                                                                                           &auto_shift LS(J) J  &auto_shift LS(L) L          &auto_shift LS(U) U            &auto_shift LS(Y) Y  &auto_shift LS(SEMICOLON) SEMICOLON  &auto_shift LS(BACKSLASH) BACKSLASH
                       &kp TAB  &auto_shift LS(A) A  &auto_shift LS(R) R  &auto_shift LS(S) S  &auto_shift LS(T) T  &auto_shift LS(G) G                                                                                                           &auto_shift LS(M) M  &auto_shift LS(N) N          &auto_shift LS(E) E            &auto_shift LS(I) I                  &auto_shift LS(O) O              &auto_shift LS(SQT) SQT
   &auto_shift LS(GRAVE) GRAVE  &auto_shift LS(Z) Z  &auto_shift LS(X) X  &auto_shift LS(C) C  &auto_shift LS(D) D  &auto_shift LS(V) V  &tap_dance_layer_2    &kp LEFT_SHIFT  &kp K_CONTEXT_MENU   &kp LGUI      &kp RSHIFT  &tap_dance_layer_1  &auto_shift LS(K) K  &auto_shift LS(H) H  &auto_shift LS(COMMA) COMMA  &auto_shift LS(PERIOD) PERIOD          &auto_shift LS(SLASH) SLASH                              &kp INS
                    &magic 3 0            &kp MINUS            &kp EQUAL         &kp LEFT_GUI           &kp ESCAPE                                 &kp BSPC  &mt LCTRL DELETE  &mt LEFT_ALT ENTER  &kp RCTRL  &mt LALT ENTER           &kp SPACE                                  &kp LEFT                     &kp DOWN                   &kp UP_ARROW                            &kp RIGHT                      &kp PRINTSCREEN
            >;
        };

        symbols {
            bindings = <
&trans                             &trans                             &trans                             &trans                             &trans                                                                                                                                                   &trans                             &trans                             &trans                             &trans  &trans
&trans                             &trans                             &trans                             &trans                             &trans                             &trans                                                                             &trans                             &trans                             &trans                             &trans                             &trans  &trans
&trans                           &kp PIPE                              &none                           &kp LBKT                  &kp RIGHT_BRACKET                              &none                                                                              &none                        &kp KP_PLUS                       &kp KP_MINUS                       &kp KP_EQUAL                             &trans  &trans
&trans  &auto_shift LS(NUMBER_1) NUMBER_1  &auto_shift LS(NUMBER_2) NUMBER_2  &auto_shift LS(NUMBER_3) NUMBER_3  &auto_shift LS(NUMBER_4) NUMBER_4  &auto_shift LS(NUMBER_5) NUMBER_5                                                  &auto_shift LS(NUMBER_6) NUMBER_6  &auto_shift LS(NUMBER_7) NUMBER_7  &auto_shift LS(NUMBER_8) NUMBER_8  &auto_shift LS(NUMBER_9) NUMBER_9  &auto_shift LS(NUMBER_0) NUMBER_0  &trans
&trans                      &kp BACKSLASH                              &none                     &kp LEFT_BRACE                    &kp RIGHT_BRACE                              &none  &trans  &trans  &trans  &trans  &trans   &to 0                     &kp UNDERSCORE                              &none                             &trans                             &trans                             &trans  &trans
&trans                             &trans                             &trans                             &trans                             &trans                                     &trans  &trans  &trans  &trans  &trans  &trans                                                                &trans                             &trans                             &trans                             &trans  &trans
            >;
        };

        navigation_Plus {
            bindings = <
      &trans        &trans          &trans          &trans           &trans                                                                                         &trans          &trans           &trans    &trans           &trans
&kp C_BRI_DN  &kp C_BRI_UP      &kp C_PREV        &kp C_PP       &kp C_NEXT      &none                                                               &none      &kp C_MUTE    &kp C_VOL_DN     &kp C_VOL_UP     &none  &kp PAUSE_BREAK
      &trans         &none        &kp HOME    &kp UP_ARROW          &kp END  &kp PG_UP                                                      &mwh SCROLL_UP           &none    &mmv MOVE_UP            &none     &none   &kp SCROLLLOCK
      &trans         &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_DN                                                    &mwh SCROLL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB2       &kp KP_NUM
      &trans         &kp Z           &kp X           &kp C            &none      &kp V   &to 0  &trans  &trans  &trans  &trans  &trans               &none        &mkp MB4        &mkp MB3         &mkp MB5     &none           &trans
  &magic 3 0        &trans          &trans          &trans           &trans             &trans  &trans  &trans  &trans  &trans  &mkp MB1                            &trans          &trans           &trans    &trans           &trans
            >;
        };

        layer_Magic {
            bindings = <
 &bt BT_CLR            &none            &none            &none            &none                                                                           &none  &none  &none  &none  &bt BT_CLR_ALL
      &none            &none            &none            &none            &none            &none                                                   &none  &none  &none  &none  &none           &none
      &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none           &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none     &bootloader
 &sys_reset            &none            &none            &none            &none            &none  &bt_2  &bt_3         &none  &none  &none  &none  &none  &none  &none  &none  &none      &sys_reset
      &none            &none            &none            &none            &none                   &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none           &none
            >;
        };
    };
};
